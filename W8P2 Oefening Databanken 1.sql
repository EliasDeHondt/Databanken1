--
select * from pg_constraint where contype = 'f';
--(c = check, f = foreign, u = unique)
--
-- Vraag 1.
-- a.
INSERT INTO employees
(employee_id,last_name,first_name)
VALUES('999666666','De Ridder','Martine');
-- CONSTRAINT constraintnaam PRIMARY KEY
--
-- b.
UPDATE employees
SET parking_spot=1
WHERE employee_id='999888888';
-- CONSTRAINT constraintnaam UNIQUE
--
-- c.
INSERT INTO employees(employee_id,last_name, salary)
VALUES('999999999','De Ridder', 99000);
-- CONSTRAINT NOT NULL
--
-- d.
DELETE FROM departments
WHERE department_id=3 ;
-- CONSTRAINT constraintnaam REFERENCES tabelnaam(PK)
--
-- e.
UPDATE employees
SET department_id=15
WHERE department_id=7;
-- CONSTRAINT constraintnaam REFERENCES tabelnaam(PK)
--
-- Vraag 2.
INSERT INTO employees(employee_id, last_name, first_name) VALUES ('999999999','Jan', 'Janssens');
--
INSERT INTO departments(department_id, department_name, manager_id) VALUES (15,'Human Resources','999999999');
--
INSERT INTO locations(department_id, location) VALUES (15,'Antwerpen');
--
UPDATE employees SET department_id=15 WHERE employee_id='999999999';
--
INSERT INTO projects(project_id, project_name, location, department_id) VALUES (40,'Opleidingen','Antwerpen',15);
--
UPDATE employees SET department_id=15 WHERE employee_id='999333333' AND employee_id='999111111';
--
UPDATE employees SET manager_id='999999999' WHERE employee_id='999333333';
--
UPDATE employees SET manager_id='999333333' WHERE employee_id='999111111';
--
INSERT INTO tasks(employee_id, project_id, hours) VALUES ('999333333',40,20);
--
INSERT INTO tasks(employee_id, project_id, hours) VALUES ('999111111',40,10);
--
ALTER TABLE IF EXISTS departments ALTER department_name SET DATA TYPE VARCHAR(25);
--
ALTER TABLE IF EXISTS projects ADD CONSTRAINT ch_projects_name CHECK (project_name=upper(project_name)) NOT VALID;
--
UPDATE projects SET project_name=upper(project_name);
--
ALTER TABLE IF EXISTS projects VALIDATE CONSTRAINT ch_projects_name;
--
ALTER TABLE IF EXISTS employees ADD COLUMN email VARCHAR(20) NOT NULL DEFAULT 'unknown';
--
ALTER TABLE IF EXISTS departments ALTER COLUMN department_name DROP NOT NULL;
--
ALTER TABLE IF EXISTS employees DROP COLUMN email;
--
ALTER TABLE IF EXISTS projects DROP CONSTRAINT ch_projects_name;
--
ALTER TABLE IF EXISTS family_members DROP CONSTRAINT c_gender, ADD CONSTRAINT c_gender CHECK (gender IN ('F','M','f','m'));
--
ALTER TABLE IF EXISTS departments DROP CONSTRAINT fk_dep_emp;
ALTER TABLE IF EXISTS departments ADD CONSTRAINT fk_dep_emp FOREIGN KEY(manager_id) REFERENCES employees(employee_id);
--ALTER TABLE IF EXISTS departments DROP CONSTRAINT fk_dep_emp, ADD CONSTRAINT fk_dep_emp FOREIGN KEY(manager_id) REFERENCES employees(employee_id);
--
DROP TABLE family_members;
DROP TABLE locations;
DROP TABLE tasks;
DROP TABLE projects;
ALTER TABLE employees DROP CONSTRAINT fk_emp_department_id;
DROP TABLE departments;
DROP TABLE employees;
--
CREATE SEQUENCE IF NOT EXISTS seq_department_id INCREMENT 1 START WITH 8;
--
CREATE SEQUENCE IF NOT EXISTS seq_project_id INCREMENT 10 START WITH 30;
--
INSERT INTO departments(department_id, department_name) VALUES (nextval('seq_department_id'), 'Financieringen');
--
INSERT INTO projects(project_id, project_name) VALUES (nextval('seq_project_id'), 'Crediteuren');
UPDATE projects SET department_id=currval('seq_department_id') WHERE project_name='Crediteuren';
--
SELECT department_id FROM departments ORDER BY department_id DESC FETCH FIRST 1 ROW ONLY;
--
ALTER TABLE departments ADD COLUMN department_id_new INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 10);
--
UPDATE departments SET department_id_new = department_id;
--
ALTER TABLE departments DROP COLUMN department_id CASCADE;
--
ALTER TABLE departments RENAME COLUMN department_id_new TO department_id;
--
ALTER TABLE departments ADD CONSTRAINT pk_department PRIMARY KEY(department_id);
--
INSERT INTO departments(department_name) VALUES ('ICT');